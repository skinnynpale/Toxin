{"version":3,"sources":["../../components/calendar/datepicker.js"],"names":["window","$","undefined","$body","$datepickersContainer","datepicker","containerBuilt","defaults","hotKeys","Datepicker","classes","inline","language","startDate","Date","firstDay","weekends","dateFormat","altField","altFieldDateFormat","toggleSelected","keyboardNav","position","offset","view","minView","showOtherMonths","selectOtherMonths","moveToOtherMonthsOnSelect","showOtherYears","selectOtherYears","moveToOtherYearsOnSelect","minDate","maxDate","disableNavWhenOutOfRange","multipleDates","multipleDatesSeparator","range","todayButton","clearButton","showEvent","autoClose","monthsField","prevHtml","nextHtml","navTitles","days","months","years","timepicker","onlyTimepicker","dateTimeSeparator","timeFormat","minHours","maxHours","minMinutes","maxMinutes","hoursStep","minutesStep","onSelect","onShow","onHide","onChangeMonth","onChangeYear","onChangeDecade","onChangeView","onRenderCell","el","options","$el","opts","extend","data","nodeName","elIsInput","$altField","inited","visible","silent","currentDate","currentView","_createShortCuts","selectedDates","views","keys","minRange","maxRange","_prevOnSelectValue","init","prototype","VERSION","viewIndexes","_buildDatepickersContainer","_buildBaseHtml","_defineLocale","_syncWithMinMaxDates","_setPositionClasses","_bindEvents","_bindKeyboardEvents","$datepicker","on","_onMouseDownDatepicker","bind","_onMouseUpDatepicker","addClass","fn","Timepicker","_bindTimepickerEvents","Body","show","nav","Navigation","_onClickCell","_onMouseEnterCell","_onMouseLeaveCell","_onShowEvent","_onMouseUpEl","_onBlur","_onKeyUpGeneral","_onResize","_onMouseUpBody","_onKeyDown","_onKeyUp","_onHotKey","_onTimeChange","isWeekend","day","indexOf","lang","loc","console","warn","ru","join","boundary","_getWordBoundaryRegExp","match","ampm","append","$appendTarget","$inline","insertAfter","appendTo","$content","$nav","_triggerOnChange","length","formattedDates","parsedSelected","getParsedDate","_this","dates","year","month","date","hours","minutes","map","formatDate","parsedDate","next","d","o","curDecade","prev","string","result","validHours","locale","leadingZero","getLeadingZeroNum","decade","getDecade","fullHours","dayPeriod","replacer","_replacer","_getValidHoursFromDate","test","replace","getTime","toUpperCase","fullDate","daysShort","fullMonth","monthsShort","fullMinutes","toString","slice","str","reg","p1","p2","p3","sign","symbols","RegExp","selectDate","len","newDate","Array","isArray","forEach","lastSelectedDate","_setTime","_trigger","setHours","setMinutes","getMonth","getFullYear","_render","_isSelected","push","bigger","_setInputValue","timepickerIsActive","hide","removeDate","selected","some","curDate","i","isSame","splice","today","clear","update","param","value","arguments","_addButtonsIfNeed","setPosition","_handleDate","_updateRanges","_updateCurrentTime","curTime","minTime","maxTime","checkDate","cellType","res","altValues","format","altFormat","val","_isInRange","type","time","min","max","dMinTime","dMaxTime","types","_getDimensions","width","outerWidth","height","outerHeight","left","top","_getDateFromCell","cell","pos","main","split","removeAttr","dims","selfDims","secondary","auto","css","id","_bindVisionEvents","removeClass","focused","inFocus","blur","down","_changeView","up","event","off","one","dir","nextView","viewIndex","_handleHotKey","key","focusedParsed","totalDaysInNextMonth","_getFocusedDate","monthChanged","yearChanged","decadeChanged","y","m","getDaysCount","_registerKey","curKey","_unRegisterKey","index","_isHotKeyPressed","currentHotKey","found","pressedKeys","sort","hotKey","every","args","trigger","_focusNextCell","keyCode","nd","getDate","_getCell","$cell","selector","find","destroy","closest","remove","_handleAlreadySelectedDates","alreadySelected","selectedDate","e","originalEvent","timepickerFocus","focus","setTimeout","code","which","preventDefault","hasClass","target","less","_update","h","_focused","prevView","substring","getDay","getHours","getMinutes","firstYear","Math","floor","template","source","date1","date2","d1","d2","_type","conditions","dateCompareTo","num","parseInt","resetTime","each","Constructor","daysMin","templates","dp","proxy","$names","$cells","_getDayNamesHtml","curDay","html","_getCellContents","parent","render","disabled","_getDaysHtml","totalMonthDays","firstMonthDay","lastMonthDay","daysFromPevMonth","daysFromNextMonth","_getDayHtml","content","_getMonthsHtml","_getMonthHtml","_getYearsHtml","_getYearHtml","_renderTypes","dayNames","attr","acitve","active","_handleClick","$buttonsContainer","_onClickNavButton","_onClickNavTitle","_addButton","title","_getTitle","setNavStatus","_addButtonsContainer","action","label","_disableNav","_activateNav","inst","input","_buildHTML","navigator","userAgent","_onSelectDate","$ranges","_onChangeRange","_onMouseUpRange","_onMouseEnterRange","_onMouseOutRange","_date","_setMinTimeFromDate","_setMaxTimeFromDate","_setDefaultMinMaxTime","_validateHoursMinutes","lz","hourMin","hourMax","hourStep","hourValue","hourVisible","displayHours","minMin","minMax","minStep","minValue","_template","$timepicker","$hours","$minutes","$hoursText","$minutesText","$ampm","_ampm","_hours","$target","name","jQuery"],"mappings":"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","file":"datepicker.261afa7d.js","sourceRoot":"..\\app\\pages\\index","sourcesContent":[";(function (window, $, undefined) { ;(function () {\r\n    var VERSION = '2.2.3',\r\n        pluginName = 'datepicker',\r\n        autoInitSelector = '.datepicker-here',\r\n        $body, $datepickersContainer,\r\n        containerBuilt = false,\r\n        baseTemplate = '' +\r\n            '<div class=\"datepicker\">' +\r\n            '<i class=\"datepicker--pointer\"></i>' +\r\n            '<nav class=\"datepicker--nav\"></nav>' +\r\n            '<div class=\"datepicker--content\"></div>' +\r\n            '</div>',\r\n        defaults = {\r\n            classes: '',\r\n            inline: false,\r\n            language: 'ru',\r\n            startDate: new Date(),\r\n            firstDay: '',\r\n            weekends: [6, 0],\r\n            dateFormat: '',\r\n            altField: '',\r\n            altFieldDateFormat: '@',\r\n            toggleSelected: true,\r\n            keyboardNav: true,\r\n\r\n            position: 'bottom left',\r\n            offset: 12,\r\n\r\n            view: 'days',\r\n            minView: 'days',\r\n\r\n            showOtherMonths: true,\r\n            selectOtherMonths: true,\r\n            moveToOtherMonthsOnSelect: true,\r\n\r\n            showOtherYears: true,\r\n            selectOtherYears: true,\r\n            moveToOtherYearsOnSelect: true,\r\n\r\n            minDate: '',\r\n            maxDate: '',\r\n            disableNavWhenOutOfRange: true,\r\n\r\n            multipleDates: false, // Boolean or Number\r\n            multipleDatesSeparator: ',',\r\n            range: false,\r\n\r\n            todayButton: false,\r\n            clearButton: false,\r\n\r\n            showEvent: 'focus',\r\n            autoClose: false,\r\n\r\n            // navigation\r\n            monthsField: 'monthsShort',\r\n            prevHtml: '<svg><path d=\"M 17,12 l -5,5 l 5,5\"></path></svg>',\r\n            nextHtml: '<svg><path d=\"M 14,12 l 5,5 l -5,5\"></path></svg>',\r\n            navTitles: {\r\n                days: 'MM <i>yyyy</i>',\r\n                months: 'yyyy',\r\n                years: 'yyyy1 - yyyy2'\r\n            },\r\n\r\n            // timepicker\r\n            timepicker: false,\r\n            onlyTimepicker: false,\r\n            dateTimeSeparator: ' ',\r\n            timeFormat: '',\r\n            minHours: 0,\r\n            maxHours: 24,\r\n            minMinutes: 0,\r\n            maxMinutes: 59,\r\n            hoursStep: 1,\r\n            minutesStep: 1,\r\n\r\n            // events\r\n            onSelect: '',\r\n            onShow: '',\r\n            onHide: '',\r\n            onChangeMonth: '',\r\n            onChangeYear: '',\r\n            onChangeDecade: '',\r\n            onChangeView: '',\r\n            onRenderCell: ''\r\n        },\r\n        hotKeys = {\r\n            'ctrlRight': [17, 39],\r\n            'ctrlUp': [17, 38],\r\n            'ctrlLeft': [17, 37],\r\n            'ctrlDown': [17, 40],\r\n            'shiftRight': [16, 39],\r\n            'shiftUp': [16, 38],\r\n            'shiftLeft': [16, 37],\r\n            'shiftDown': [16, 40],\r\n            'altUp': [18, 38],\r\n            'altRight': [18, 39],\r\n            'altLeft': [18, 37],\r\n            'altDown': [18, 40],\r\n            'ctrlShiftUp': [16, 17, 38]\r\n        },\r\n        datepicker;\r\n\r\n    var Datepicker  = function (el, options) {\r\n        this.el = el;\r\n        this.$el = $(el);\r\n\r\n        this.opts = $.extend(true, {}, defaults, options, this.$el.data());\r\n\r\n        if ($body == undefined) {\r\n            $body = $('.datepicker-place');\r\n        }\r\n\r\n        if (!this.opts.startDate) {\r\n            this.opts.startDate = new Date();\r\n        }\r\n\r\n        if (this.el.nodeName == 'INPUT') {\r\n            this.elIsInput = true;\r\n        }\r\n\r\n        if (this.opts.altField) {\r\n            this.$altField = typeof this.opts.altField == 'string' ? $(this.opts.altField) : this.opts.altField;\r\n        }\r\n\r\n        this.inited = false;\r\n        this.visible = false;\r\n        this.silent = false; // Need to prevent unnecessary rendering\r\n\r\n        this.currentDate = this.opts.startDate;\r\n        this.currentView = this.opts.view;\r\n        this._createShortCuts();\r\n        this.selectedDates = [];\r\n        this.views = {};\r\n        this.keys = [];\r\n        this.minRange = '';\r\n        this.maxRange = '';\r\n        this._prevOnSelectValue = '';\r\n\r\n        this.init()\r\n    };\r\n\r\n    datepicker = Datepicker;\r\n\r\n    datepicker.prototype = {\r\n        VERSION: VERSION,\r\n        viewIndexes: ['days', 'months', 'years'],\r\n\r\n        init: function () {\r\n            if (!containerBuilt && !this.opts.inline && this.elIsInput) {\r\n                this._buildDatepickersContainer();\r\n            }\r\n            this._buildBaseHtml();\r\n            this._defineLocale(this.opts.language);\r\n            this._syncWithMinMaxDates();\r\n\r\n            if (this.elIsInput) {\r\n                if (!this.opts.inline) {\r\n                    // Set extra classes for proper transitions\r\n                    this._setPositionClasses(this.opts.position);\r\n                    this._bindEvents()\r\n                }\r\n                if (this.opts.keyboardNav && !this.opts.onlyTimepicker) {\r\n                    this._bindKeyboardEvents();\r\n                }\r\n                this.$datepicker.on('mousedown', this._onMouseDownDatepicker.bind(this));\r\n                this.$datepicker.on('mouseup', this._onMouseUpDatepicker.bind(this));\r\n            }\r\n\r\n            if (this.opts.classes) {\r\n                this.$datepicker.addClass(this.opts.classes)\r\n            }\r\n\r\n            if (this.opts.timepicker) {\r\n                this.timepicker = new $.fn.datepicker.Timepicker(this, this.opts);\r\n                this._bindTimepickerEvents();\r\n            }\r\n\r\n            if (this.opts.onlyTimepicker) {\r\n                this.$datepicker.addClass('-only-timepicker-');\r\n            }\r\n\r\n            this.views[this.currentView] = new $.fn.datepicker.Body(this, this.currentView, this.opts);\r\n            this.views[this.currentView].show();\r\n            this.nav = new $.fn.datepicker.Navigation(this, this.opts);\r\n            this.view = this.currentView;\r\n\r\n            this.$el.on('clickCell.adp', this._onClickCell.bind(this));\r\n            this.$datepicker.on('mouseenter', '.datepicker--cell', this._onMouseEnterCell.bind(this));\r\n            this.$datepicker.on('mouseleave', '.datepicker--cell', this._onMouseLeaveCell.bind(this));\r\n\r\n            this.inited = true;\r\n        },\r\n\r\n        _createShortCuts: function () {\r\n            this.minDate = this.opts.minDate ? this.opts.minDate : new Date(-8639999913600000);\r\n            this.maxDate = this.opts.maxDate ? this.opts.maxDate : new Date(8639999913600000);\r\n        },\r\n\r\n        _bindEvents : function () {\r\n            this.$el.on(this.opts.showEvent + '.adp', this._onShowEvent.bind(this));\r\n            this.$el.on('mouseup.adp', this._onMouseUpEl.bind(this));\r\n            this.$el.on('blur.adp', this._onBlur.bind(this));\r\n            this.$el.on('keyup.adp', this._onKeyUpGeneral.bind(this));\r\n            $(window).on('resize.adp', this._onResize.bind(this));\r\n            $('body').on('mouseup.adp', this._onMouseUpBody.bind(this));\r\n        },\r\n\r\n        _bindKeyboardEvents: function () {\r\n            this.$el.on('keydown.adp', this._onKeyDown.bind(this));\r\n            this.$el.on('keyup.adp', this._onKeyUp.bind(this));\r\n            this.$el.on('hotKey.adp', this._onHotKey.bind(this));\r\n        },\r\n\r\n        _bindTimepickerEvents: function () {\r\n            this.$el.on('timeChange.adp', this._onTimeChange.bind(this));\r\n        },\r\n\r\n        isWeekend: function (day) {\r\n            return this.opts.weekends.indexOf(day) !== -1;\r\n        },\r\n\r\n        _defineLocale: function (lang) {\r\n            if (typeof lang == 'string') {\r\n                this.loc = $.fn.datepicker.language[lang];\r\n                if (!this.loc) {\r\n                    console.warn('Can\\'t find language \"' + lang + '\" in Datepicker.language, will use \"ru\" instead');\r\n                    this.loc = $.extend(true, {}, $.fn.datepicker.language.ru)\r\n                }\r\n\r\n                this.loc = $.extend(true, {}, $.fn.datepicker.language.ru, $.fn.datepicker.language[lang])\r\n            } else {\r\n                this.loc = $.extend(true, {}, $.fn.datepicker.language.ru, lang)\r\n            }\r\n\r\n            if (this.opts.dateFormat) {\r\n                this.loc.dateFormat = this.opts.dateFormat\r\n            }\r\n\r\n            if (this.opts.timeFormat) {\r\n                this.loc.timeFormat = this.opts.timeFormat\r\n            }\r\n\r\n            if (this.opts.firstDay !== '') {\r\n                this.loc.firstDay = this.opts.firstDay\r\n            }\r\n\r\n            if (this.opts.timepicker) {\r\n                this.loc.dateFormat = [this.loc.dateFormat, this.loc.timeFormat].join(this.opts.dateTimeSeparator);\r\n            }\r\n\r\n            if (this.opts.onlyTimepicker) {\r\n                this.loc.dateFormat = this.loc.timeFormat;\r\n            }\r\n\r\n            var boundary = this._getWordBoundaryRegExp;\r\n            if (this.loc.timeFormat.match(boundary('aa')) ||\r\n                this.loc.timeFormat.match(boundary('AA'))\r\n            ) {\r\n               this.ampm = true;\r\n            }\r\n        },\r\n\r\n        _buildDatepickersContainer: function () {\r\n            containerBuilt = true;\r\n            $body.append('<div class=\"datepickers-container\" id=\"datepickers-container\"></div>');\r\n            $datepickersContainer = $('#datepickers-container');\r\n        },\r\n\r\n        _buildBaseHtml: function () {\r\n            var $appendTarget,\r\n                $inline = $('<div class=\"datepicker-inline\">');\r\n\r\n            if(this.el.nodeName == 'INPUT') {\r\n                if (!this.opts.inline) {\r\n                    $appendTarget = $datepickersContainer;\r\n                } else {\r\n                    $appendTarget = $inline.insertAfter(this.$el)\r\n                }\r\n            } else {\r\n                $appendTarget = $inline.appendTo(this.$el)\r\n            }\r\n\r\n            this.$datepicker = $(baseTemplate).appendTo($appendTarget);\r\n            this.$content = $('.datepicker--content', this.$datepicker);\r\n            this.$nav = $('.datepicker--nav', this.$datepicker);\r\n        },\r\n\r\n        _triggerOnChange: function () {\r\n            if (!this.selectedDates.length) {\r\n                // Prevent from triggering multiple onSelect callback with same argument (empty string) in IE10-11\r\n                if (this._prevOnSelectValue === '') return;\r\n                this._prevOnSelectValue = '';\r\n                return this.opts.onSelect('', '', this);\r\n            }\r\n\r\n            var selectedDates = this.selectedDates,\r\n                parsedSelected = datepicker.getParsedDate(selectedDates[0]),\r\n                formattedDates,\r\n                _this = this,\r\n                dates = new Date(\r\n                    parsedSelected.year,\r\n                    parsedSelected.month,\r\n                    parsedSelected.date,\r\n                    parsedSelected.hours,\r\n                    parsedSelected.minutes\r\n                );\r\n\r\n                formattedDates = selectedDates.map(function (date) {\r\n                    return _this.formatDate(_this.loc.dateFormat, date)\r\n                }).join(this.opts.multipleDatesSeparator);\r\n\r\n            // Create new dates array, to separate it from original selectedDates\r\n            if (this.opts.multipleDates || this.opts.range) {\r\n                dates = selectedDates.map(function(date) {\r\n                    var parsedDate = datepicker.getParsedDate(date);\r\n                    return new Date(\r\n                        parsedDate.year,\r\n                        parsedDate.month,\r\n                        parsedDate.date,\r\n                        parsedDate.hours,\r\n                        parsedDate.minutes\r\n                    );\r\n                })\r\n            }\r\n\r\n            this._prevOnSelectValue = formattedDates;\r\n            this.opts.onSelect(formattedDates, dates, this);\r\n        },\r\n\r\n        next: function () {\r\n            var d = this.parsedDate,\r\n                o = this.opts;\r\n            switch (this.view) {\r\n                case 'days':\r\n                    this.date = new Date(d.year, d.month + 1, 1);\r\n                    if (o.onChangeMonth) o.onChangeMonth(this.parsedDate.month, this.parsedDate.year);\r\n                    break;\r\n                case 'months':\r\n                    this.date = new Date(d.year + 1, d.month, 1);\r\n                    if (o.onChangeYear) o.onChangeYear(this.parsedDate.year);\r\n                    break;\r\n                case 'years':\r\n                    this.date = new Date(d.year + 10, 0, 1);\r\n                    if (o.onChangeDecade) o.onChangeDecade(this.curDecade);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        prev: function () {\r\n            var d = this.parsedDate,\r\n                o = this.opts;\r\n            switch (this.view) {\r\n                case 'days':\r\n                    this.date = new Date(d.year, d.month - 1, 1);\r\n                    if (o.onChangeMonth) o.onChangeMonth(this.parsedDate.month, this.parsedDate.year);\r\n                    break;\r\n                case 'months':\r\n                    this.date = new Date(d.year - 1, d.month, 1);\r\n                    if (o.onChangeYear) o.onChangeYear(this.parsedDate.year);\r\n                    break;\r\n                case 'years':\r\n                    this.date = new Date(d.year - 10, 0, 1);\r\n                    if (o.onChangeDecade) o.onChangeDecade(this.curDecade);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        formatDate: function (string, date) {\r\n            date = date || this.date;\r\n            var result = string,\r\n                boundary = this._getWordBoundaryRegExp,\r\n                locale = this.loc,\r\n                leadingZero = datepicker.getLeadingZeroNum,\r\n                decade = datepicker.getDecade(date),\r\n                d = datepicker.getParsedDate(date),\r\n                fullHours = d.fullHours,\r\n                hours = d.hours,\r\n                ampm = string.match(boundary('aa')) || string.match(boundary('AA')),\r\n                dayPeriod = 'am',\r\n                replacer = this._replacer,\r\n                validHours;\r\n\r\n            if (this.opts.timepicker && this.timepicker && ampm) {\r\n                validHours = this.timepicker._getValidHoursFromDate(date, ampm);\r\n                fullHours = leadingZero(validHours.hours);\r\n                hours = validHours.hours;\r\n                dayPeriod = validHours.dayPeriod;\r\n            }\r\n\r\n            switch (true) {\r\n                case /@/.test(result):\r\n                    result = result.replace(/@/, date.getTime());\r\n                case /aa/.test(result):\r\n                    result = replacer(result, boundary('aa'), dayPeriod);\r\n                case /AA/.test(result):\r\n                    result = replacer(result, boundary('AA'), dayPeriod.toUpperCase());\r\n                case /dd/.test(result):\r\n                    result = replacer(result, boundary('dd'), d.fullDate);\r\n                case /d/.test(result):\r\n                    result = replacer(result, boundary('d'), d.date);\r\n                case /DD/.test(result):\r\n                    result = replacer(result, boundary('DD'), locale.days[d.day]);\r\n                case /D/.test(result):\r\n                    result = replacer(result, boundary('D'), locale.daysShort[d.day]);\r\n                case /mm/.test(result):\r\n                    result = replacer(result, boundary('mm'), d.fullMonth);\r\n                case /m/.test(result):\r\n                    result = replacer(result, boundary('m'), d.month + 1);\r\n                case /MM/.test(result):\r\n                    result = replacer(result, boundary('MM'), this.loc.months[d.month]);\r\n                case /M/.test(result):\r\n                    result = replacer(result, boundary('M'), locale.monthsShort[d.month]);\r\n                case /ii/.test(result):\r\n                    result = replacer(result, boundary('ii'), d.fullMinutes);\r\n                case /i/.test(result):\r\n                    result = replacer(result, boundary('i'), d.minutes);\r\n                case /hh/.test(result):\r\n                    result = replacer(result, boundary('hh'), fullHours);\r\n                case /h/.test(result):\r\n                    result = replacer(result, boundary('h'), hours);\r\n                case /yyyy/.test(result):\r\n                    result = replacer(result, boundary('yyyy'), d.year);\r\n                case /yyyy1/.test(result):\r\n                    result = replacer(result, boundary('yyyy1'), decade[0]);\r\n                case /yyyy2/.test(result):\r\n                    result = replacer(result, boundary('yyyy2'), decade[1]);\r\n                case /yy/.test(result):\r\n                    result = replacer(result, boundary('yy'), d.year.toString().slice(-2));\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _replacer: function (str, reg, data) {\r\n            return str.replace(reg, function (match, p1,p2,p3) {\r\n                return p1 + data + p3;\r\n            })\r\n        },\r\n\r\n        _getWordBoundaryRegExp: function (sign) {\r\n            var symbols = '\\\\s|\\\\.|-|/|\\\\\\\\|,|\\\\$|\\\\!|\\\\?|:|;';\r\n\r\n            return new RegExp('(^|>|' + symbols + ')(' + sign + ')($|<|' + symbols + ')', 'g');\r\n        },\r\n\r\n\r\n        selectDate: function (date) {\r\n            var _this = this,\r\n                opts = _this.opts,\r\n                d = _this.parsedDate,\r\n                selectedDates = _this.selectedDates,\r\n                len = selectedDates.length,\r\n                newDate = '';\r\n\r\n            if (Array.isArray(date)) {\r\n                date.forEach(function (d) {\r\n                    _this.selectDate(d)\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (!(date instanceof Date)) return;\r\n\r\n            this.lastSelectedDate = date;\r\n\r\n            // Set new time values from Date\r\n            if (this.timepicker) {\r\n                this.timepicker._setTime(date);\r\n            }\r\n\r\n            // On this step timepicker will set valid values in it's instance\r\n            _this._trigger('selectDate', date);\r\n\r\n            // Set correct time values after timepicker's validation\r\n            // Prevent from setting hours or minutes which values are lesser then `min` value or\r\n            // greater then `max` value\r\n            if (this.timepicker) {\r\n                date.setHours(this.timepicker.hours);\r\n                date.setMinutes(this.timepicker.minutes)\r\n            }\r\n\r\n            if (_this.view == 'days') {\r\n                if (date.getMonth() != d.month && opts.moveToOtherMonthsOnSelect) {\r\n                    newDate = new Date(date.getFullYear(), date.getMonth(), 1);\r\n                }\r\n            }\r\n\r\n            if (_this.view == 'years') {\r\n                if (date.getFullYear() != d.year && opts.moveToOtherYearsOnSelect) {\r\n                    newDate = new Date(date.getFullYear(), 0, 1);\r\n                }\r\n            }\r\n\r\n            if (newDate) {\r\n                _this.silent = true;\r\n                _this.date = newDate;\r\n                _this.silent = false;\r\n                _this.nav._render()\r\n            }\r\n\r\n            if (opts.multipleDates && !opts.range) { // Set priority to range functionality\r\n                if (len === opts.multipleDates) return;\r\n                if (!_this._isSelected(date)) {\r\n                    _this.selectedDates.push(date);\r\n                }\r\n            } else if (opts.range) {\r\n                if (len == 2) {\r\n                    _this.selectedDates = [date];\r\n                    _this.minRange = date;\r\n                    _this.maxRange = '';\r\n                } else if (len == 1) {\r\n                    _this.selectedDates.push(date);\r\n                    if (!_this.maxRange){\r\n                        _this.maxRange = date;\r\n                    } else {\r\n                        _this.minRange = date;\r\n                    }\r\n                    // Swap dates if they were selected via dp.selectDate() and second date was smaller then first\r\n                    if (datepicker.bigger(_this.maxRange, _this.minRange)) {\r\n                        _this.maxRange = _this.minRange;\r\n                        _this.minRange = date;\r\n                    }\r\n                    _this.selectedDates = [_this.minRange, _this.maxRange]\r\n\r\n                } else {\r\n                    _this.selectedDates = [date];\r\n                    _this.minRange = date;\r\n                }\r\n            } else {\r\n                _this.selectedDates = [date];\r\n            }\r\n\r\n            _this._setInputValue();\r\n\r\n            if (opts.onSelect) {\r\n                _this._triggerOnChange();\r\n            }\r\n\r\n            if (opts.autoClose && !this.timepickerIsActive) {\r\n                if (!opts.multipleDates && !opts.range) {\r\n                    _this.hide();\r\n                } else if (opts.range && _this.selectedDates.length == 2) {\r\n                    _this.hide();\r\n                }\r\n            }\r\n\r\n            _this.views[this.currentView]._render()\r\n        },\r\n\r\n        removeDate: function (date) {\r\n            var selected = this.selectedDates,\r\n                _this = this;\r\n\r\n            if (!(date instanceof Date)) return;\r\n\r\n            return selected.some(function (curDate, i) {\r\n                if (datepicker.isSame(curDate, date)) {\r\n                    selected.splice(i, 1);\r\n\r\n                    if (!_this.selectedDates.length) {\r\n                        _this.minRange = '';\r\n                        _this.maxRange = '';\r\n                        _this.lastSelectedDate = '';\r\n                    } else {\r\n                        _this.lastSelectedDate = _this.selectedDates[_this.selectedDates.length - 1];\r\n                    }\r\n\r\n                    _this.views[_this.currentView]._render();\r\n                    _this._setInputValue();\r\n\r\n                    if (_this.opts.onSelect) {\r\n                        _this._triggerOnChange();\r\n                    }\r\n\r\n                    return true\r\n                }\r\n            })\r\n        },\r\n\r\n        today: function () {\r\n            this.silent = true;\r\n            this.view = this.opts.minView;\r\n            this.silent = false;\r\n            this.date = new Date();\r\n\r\n            if (this.opts.todayButton instanceof Date) {\r\n                this.selectDate(this.opts.todayButton)\r\n            }\r\n        },\r\n\r\n        clear: function () {\r\n            this.selectedDates = [];\r\n            this.minRange = '';\r\n            this.maxRange = '';\r\n            this.views[this.currentView]._render();\r\n            this._setInputValue();\r\n            if (this.opts.onSelect) {\r\n                this._triggerOnChange()\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Updates datepicker options\r\n         * @param {String|Object} param - parameter's name to update. If object then it will extend current options\r\n         * @param {String|Number|Object} [value] - new param value\r\n         */\r\n        update: function (param, value) {\r\n            var len = arguments.length,\r\n                lastSelectedDate = this.lastSelectedDate;\r\n\r\n            if (len == 2) {\r\n                this.opts[param] = value;\r\n            } else if (len == 1 && typeof param == 'object') {\r\n                this.opts = $.extend(true, this.opts, param)\r\n            }\r\n\r\n            this._createShortCuts();\r\n            this._syncWithMinMaxDates();\r\n            this._defineLocale(this.opts.language);\r\n            this.nav._addButtonsIfNeed();\r\n            if (!this.opts.onlyTimepicker) this.nav._render();\r\n            this.views[this.currentView]._render();\r\n\r\n            if (this.elIsInput && !this.opts.inline) {\r\n                this._setPositionClasses(this.opts.position);\r\n                if (this.visible) {\r\n                    this.setPosition(this.opts.position)\r\n                }\r\n            }\r\n\r\n            if (this.opts.classes) {\r\n                this.$datepicker.addClass(this.opts.classes)\r\n            }\r\n\r\n            if (this.opts.onlyTimepicker) {\r\n                this.$datepicker.addClass('-only-timepicker-');\r\n            }\r\n\r\n            if (this.opts.timepicker) {\r\n                if (lastSelectedDate) this.timepicker._handleDate(lastSelectedDate);\r\n                this.timepicker._updateRanges();\r\n                this.timepicker._updateCurrentTime();\r\n                // Change hours and minutes if it's values have been changed through min/max hours/minutes\r\n                if (lastSelectedDate) {\r\n                    lastSelectedDate.setHours(this.timepicker.hours);\r\n                    lastSelectedDate.setMinutes(this.timepicker.minutes);\r\n                }\r\n            }\r\n\r\n            this._setInputValue();\r\n\r\n            return this;\r\n        },\r\n\r\n        _syncWithMinMaxDates: function () {\r\n            var curTime = this.date.getTime();\r\n            this.silent = true;\r\n            if (this.minTime > curTime) {\r\n                this.date = this.minDate;\r\n            }\r\n\r\n            if (this.maxTime < curTime) {\r\n                this.date = this.maxDate;\r\n            }\r\n            this.silent = false;\r\n        },\r\n\r\n        _isSelected: function (checkDate, cellType) {\r\n            var res = false;\r\n            this.selectedDates.some(function (date) {\r\n                if (datepicker.isSame(date, checkDate, cellType)) {\r\n                    res = date;\r\n                    return true;\r\n                }\r\n            });\r\n            return res;\r\n        },\r\n\r\n        _setInputValue: function () {\r\n            var _this = this,\r\n                opts = _this.opts,\r\n                format = _this.loc.dateFormat,\r\n                altFormat = opts.altFieldDateFormat,\r\n                value = _this.selectedDates.map(function (date) {\r\n                    return _this.formatDate(format, date)\r\n                }),\r\n                altValues;\r\n\r\n            if (opts.altField && _this.$altField.length) {\r\n                altValues = this.selectedDates.map(function (date) {\r\n                    return _this.formatDate(altFormat, date)\r\n                });\r\n                altValues = altValues.join(this.opts.multipleDatesSeparator);\r\n                this.$altField.val(altValues);\r\n            }\r\n\r\n            value = value.join(this.opts.multipleDatesSeparator);\r\n\r\n            this.$el.val(value)\r\n        },\r\n\r\n        /**\r\n         * Check if date is between minDate and maxDate\r\n         * @param date {object} - date object\r\n         * @param type {string} - cell type\r\n         * @returns {boolean}\r\n         * @private\r\n         */\r\n        _isInRange: function (date, type) {\r\n            var time = date.getTime(),\r\n                d = datepicker.getParsedDate(date),\r\n                min = datepicker.getParsedDate(this.minDate),\r\n                max = datepicker.getParsedDate(this.maxDate),\r\n                dMinTime = new Date(d.year, d.month, min.date).getTime(),\r\n                dMaxTime = new Date(d.year, d.month, max.date).getTime(),\r\n                types = {\r\n                    day: time >= this.minTime && time <= this.maxTime,\r\n                    month: dMinTime >= this.minTime && dMaxTime <= this.maxTime,\r\n                    year: d.year >= min.year && d.year <= max.year\r\n                };\r\n            return type ? types[type] : types.day\r\n        },\r\n\r\n        _getDimensions: function ($el) {\r\n            var offset = $el.offset();\r\n\r\n            return {\r\n                width: $el.outerWidth(),\r\n                height: $el.outerHeight(),\r\n                left: offset.left,\r\n                top: offset.top\r\n            }\r\n        },\r\n\r\n        _getDateFromCell: function (cell) {\r\n            var curDate = this.parsedDate,\r\n                year = cell.data('year') || curDate.year,\r\n                month = cell.data('month') == undefined ? curDate.month : cell.data('month'),\r\n                date = cell.data('date') || 1;\r\n\r\n            return new Date(year, month, date);\r\n        },\r\n\r\n        _setPositionClasses: function (pos) {\r\n            pos = pos.split(' ');\r\n            var main = pos[0],\r\n                sec = pos[1],\r\n                classes = 'datepicker -' + main + '-' + sec + '- -from-' + main + '-';\r\n\r\n            if (this.visible) classes += ' active';\r\n\r\n            this.$datepicker\r\n                .removeAttr('class')\r\n                .addClass(classes);\r\n        },\r\n\r\n        setPosition: function (position) {\r\n            position = position || this.opts.position;\r\n\r\n            var dims = this._getDimensions(this.$el),\r\n                selfDims = this._getDimensions(this.$datepicker),\r\n                pos = position.split(' '),\r\n                top, left,\r\n                offset = this.opts.offset,\r\n                main = pos[0],\r\n                secondary = pos[1];\r\n\r\n            switch (main) {\r\n                case 'top':\r\n                    top = auto;\r\n                    break;\r\n                case 'right':\r\n                    left = auto;\r\n                    break;\r\n                case 'bottom':\r\n                    top = 0;\r\n                    break;\r\n                case 'left':\r\n                    left = 0;\r\n                    break;\r\n            }\r\n\r\n            switch(secondary) {\r\n                case 'top':\r\n                    top = 0;\r\n                    break;\r\n                case 'right':\r\n                    left = dims.left + dims.width - selfDims.width;\r\n                    break;\r\n                case 'bottom':\r\n                    top = 0;\r\n                    break;\r\n                case 'left':\r\n                    left = 31;\r\n                    break;\r\n                case 'center':\r\n                    if (/left|right/.test(main)) {\r\n                        top = dims.top + dims.height/2 - selfDims.height/2;\r\n                    } else {\r\n                        left = dims.left + dims.width/2 - selfDims.width/2;\r\n                    }\r\n            }\r\n\r\n            this.$datepicker\r\n                .css({\r\n                    left: 0,\r\n                    top: 0\r\n                })\r\n        },\r\n\r\n        show: function () {\r\n            var onShow = this.opts.onShow;\r\n\r\n            this.setPosition(this.opts.position);\r\n            this.$datepicker.addClass('active');\r\n            this.visible = true;\r\n\r\n            this.$datepicker\r\n                if (this[\"el\"].id == 'uiDateFilter') {\r\n                  this.$datepicker\r\n                    .css({\r\n                      left: '280px',\r\n                      top: '100px'\r\n                    });\r\n                }\r\n                if (this[\"el\"].id == 'ui-kit-field__from') {\r\n                  this.$datepicker\r\n                    .css({\r\n                      left: '0px',\r\n                      top: '75px'\r\n                    });\r\n                }\r\n                if (this[\"el\"].id == 'check-form__from') {\r\n                  this.$datepicker\r\n                    .css({\r\n                      left: '30px',\r\n                      top: '160px'\r\n                    });\r\n                }\r\n                if (this[\"el\"].id == 'dateFilter') {\r\n                  this.$datepicker\r\n                    .css({\r\n                      left: '280px',\r\n                      top: '25px'\r\n                    });\r\n                }\r\n                if (this[\"el\"].id == 'find-room__from') {\r\n                  this.$datepicker\r\n                    .css({\r\n                      left: '0px',\r\n                      top: '25px'\r\n                    });\r\n                }\r\n\r\n            if (onShow) {\r\n                this._bindVisionEvents(onShow)\r\n            }\r\n        },\r\n\r\n        hide: function () {\r\n            var onHide = this.opts.onHide;\r\n\r\n            this.$datepicker\r\n                .removeClass('active')\r\n                .css({\r\n                    left: '-100000px'\r\n                });\r\n\r\n            this.focused = '';\r\n            this.keys = [];\r\n\r\n            this.inFocus = false;\r\n            this.visible = false;\r\n            this.$el.blur();\r\n\r\n            if (onHide) {\r\n                this._bindVisionEvents(onHide)\r\n            }\r\n        },\r\n\r\n        down: function (date) {\r\n            this._changeView(date, 'down');\r\n        },\r\n\r\n        up: function (date) {\r\n            this._changeView(date, 'up');\r\n        },\r\n\r\n        _bindVisionEvents: function (event) {\r\n            this.$datepicker.off('transitionend.dp');\r\n            event(this, false);\r\n            this.$datepicker.one('transitionend.dp', event.bind(this, this, true))\r\n        },\r\n\r\n        _changeView: function (date, dir) {\r\n            date = date || this.focused || this.date;\r\n\r\n            var nextView = dir == 'up' ? this.viewIndex + 1 : this.viewIndex - 1;\r\n            if (nextView > 2) nextView = 2;\r\n            if (nextView < 0) nextView = 0;\r\n\r\n            this.silent = true;\r\n            this.date = new Date(date.getFullYear(), date.getMonth(), 1);\r\n            this.silent = false;\r\n            this.view = this.viewIndexes[nextView];\r\n\r\n        },\r\n\r\n        _handleHotKey: function (key) {\r\n            var date = datepicker.getParsedDate(this._getFocusedDate()),\r\n                focusedParsed,\r\n                o = this.opts,\r\n                newDate,\r\n                totalDaysInNextMonth,\r\n                monthChanged = false,\r\n                yearChanged = false,\r\n                decadeChanged = false,\r\n                y = date.year,\r\n                m = date.month,\r\n                d = date.date;\r\n\r\n            switch (key) {\r\n                case 'ctrlRight':\r\n                case 'ctrlUp':\r\n                    m += 1;\r\n                    monthChanged = true;\r\n                    break;\r\n                case 'ctrlLeft':\r\n                case 'ctrlDown':\r\n                    m -= 1;\r\n                    monthChanged = true;\r\n                    break;\r\n                case 'shiftRight':\r\n                case 'shiftUp':\r\n                    yearChanged = true;\r\n                    y += 1;\r\n                    break;\r\n                case 'shiftLeft':\r\n                case 'shiftDown':\r\n                    yearChanged = true;\r\n                    y -= 1;\r\n                    break;\r\n                case 'altRight':\r\n                case 'altUp':\r\n                    decadeChanged = true;\r\n                    y += 10;\r\n                    break;\r\n                case 'altLeft':\r\n                case 'altDown':\r\n                    decadeChanged = true;\r\n                    y -= 10;\r\n                    break;\r\n                case 'ctrlShiftUp':\r\n                    this.up();\r\n                    break;\r\n            }\r\n\r\n            totalDaysInNextMonth = datepicker.getDaysCount(new Date(y,m));\r\n            newDate = new Date(y,m,d);\r\n\r\n            // If next month has less days than current, set date to total days in that month\r\n            if (totalDaysInNextMonth < d) d = totalDaysInNextMonth;\r\n\r\n            // Check if newDate is in valid range\r\n            if (newDate.getTime() < this.minTime) {\r\n                newDate = this.minDate;\r\n            } else if (newDate.getTime() > this.maxTime) {\r\n                newDate = this.maxDate;\r\n            }\r\n\r\n            this.focused = newDate;\r\n\r\n            focusedParsed = datepicker.getParsedDate(newDate);\r\n            if (monthChanged && o.onChangeMonth) {\r\n                o.onChangeMonth(focusedParsed.month, focusedParsed.year)\r\n            }\r\n            if (yearChanged && o.onChangeYear) {\r\n                o.onChangeYear(focusedParsed.year)\r\n            }\r\n            if (decadeChanged && o.onChangeDecade) {\r\n                o.onChangeDecade(this.curDecade)\r\n            }\r\n        },\r\n\r\n        _registerKey: function (key) {\r\n            var exists = this.keys.some(function (curKey) {\r\n                return curKey == key;\r\n            });\r\n\r\n            if (!exists) {\r\n                this.keys.push(key)\r\n            }\r\n        },\r\n\r\n        _unRegisterKey: function (key) {\r\n            var index = this.keys.indexOf(key);\r\n\r\n            this.keys.splice(index, 1);\r\n        },\r\n\r\n        _isHotKeyPressed: function () {\r\n            var currentHotKey,\r\n                found = false,\r\n                _this = this,\r\n                pressedKeys = this.keys.sort();\r\n\r\n            for (var hotKey in hotKeys) {\r\n                currentHotKey = hotKeys[hotKey];\r\n                if (pressedKeys.length != currentHotKey.length) continue;\r\n\r\n                if (currentHotKey.every(function (key, i) { return key == pressedKeys[i]})) {\r\n                    _this._trigger('hotKey', hotKey);\r\n                    found = true;\r\n                }\r\n            }\r\n\r\n            return found;\r\n        },\r\n\r\n        _trigger: function (event, args) {\r\n            this.$el.trigger(event, args)\r\n        },\r\n\r\n        _focusNextCell: function (keyCode, type) {\r\n            type = type || this.cellType;\r\n\r\n            var date = datepicker.getParsedDate(this._getFocusedDate()),\r\n                y = date.year,\r\n                m = date.month,\r\n                d = date.date;\r\n\r\n            if (this._isHotKeyPressed()){\r\n                return;\r\n            }\r\n\r\n            switch(keyCode) {\r\n                case 37: // left\r\n                    type == 'day' ? (d -= 1) : '';\r\n                    type == 'month' ? (m -= 1) : '';\r\n                    type == 'year' ? (y -= 1) : '';\r\n                    break;\r\n                case 38: // up\r\n                    type == 'day' ? (d -= 7) : '';\r\n                    type == 'month' ? (m -= 3) : '';\r\n                    type == 'year' ? (y -= 4) : '';\r\n                    break;\r\n                case 39: // right\r\n                    type == 'day' ? (d += 1) : '';\r\n                    type == 'month' ? (m += 1) : '';\r\n                    type == 'year' ? (y += 1) : '';\r\n                    break;\r\n                case 40: // down\r\n                    type == 'day' ? (d += 7) : '';\r\n                    type == 'month' ? (m += 3) : '';\r\n                    type == 'year' ? (y += 4) : '';\r\n                    break;\r\n            }\r\n\r\n            var nd = new Date(y,m,d);\r\n            if (nd.getTime() < this.minTime) {\r\n                nd = this.minDate;\r\n            } else if (nd.getTime() > this.maxTime) {\r\n                nd = this.maxDate;\r\n            }\r\n\r\n            this.focused = nd;\r\n\r\n        },\r\n\r\n        _getFocusedDate: function () {\r\n            var focused  = this.focused || this.selectedDates[this.selectedDates.length - 1],\r\n                d = this.parsedDate;\r\n\r\n            if (!focused) {\r\n                switch (this.view) {\r\n                    case 'days':\r\n                        focused = new Date(d.year, d.month, new Date().getDate());\r\n                        break;\r\n                    case 'months':\r\n                        focused = new Date(d.year, d.month, 1);\r\n                        break;\r\n                    case 'years':\r\n                        focused = new Date(d.year, 0, 1);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            return focused;\r\n        },\r\n\r\n        _getCell: function (date, type) {\r\n            type = type || this.cellType;\r\n\r\n            var d = datepicker.getParsedDate(date),\r\n                selector = '.datepicker--cell[data-year=\"' + d.year + '\"]',\r\n                $cell;\r\n\r\n            switch (type) {\r\n                case 'month':\r\n                    selector = '[data-month=\"' + d.month + '\"]';\r\n                    break;\r\n                case 'day':\r\n                    selector += '[data-month=\"' + d.month + '\"][data-date=\"' + d.date + '\"]';\r\n                    break;\r\n            }\r\n            $cell = this.views[this.currentView].$el.find(selector);\r\n\r\n            return $cell.length ? $cell : $('');\r\n        },\r\n\r\n        destroy: function () {\r\n            var _this = this;\r\n            _this.$el\r\n                .off('.adp')\r\n                .data('datepicker', '');\r\n\r\n            _this.selectedDates = [];\r\n            _this.focused = '';\r\n            _this.views = {};\r\n            _this.keys = [];\r\n            _this.minRange = '';\r\n            _this.maxRange = '';\r\n\r\n            if (_this.opts.inline || !_this.elIsInput) {\r\n                _this.$datepicker.closest('.datepicker-inline').remove();\r\n            } else {\r\n                _this.$datepicker.remove();\r\n            }\r\n        },\r\n\r\n        _handleAlreadySelectedDates: function (alreadySelected, selectedDate) {\r\n            if (this.opts.range) {\r\n                if (!this.opts.toggleSelected) {\r\n                    // Add possibility to select same date when range is true\r\n                    if (this.selectedDates.length != 2) {\r\n                        this._trigger('clickCell', selectedDate);\r\n                    }\r\n                } else {\r\n                    this.removeDate(selectedDate);\r\n                }\r\n            } else if (this.opts.toggleSelected){\r\n                this.removeDate(selectedDate);\r\n            }\r\n\r\n            // Change last selected date to be able to change time when clicking on this cell\r\n            if (!this.opts.toggleSelected) {\r\n                this.lastSelectedDate = alreadySelected;\r\n                if (this.opts.timepicker) {\r\n                    this.timepicker._setTime(alreadySelected);\r\n                    this.timepicker.update();\r\n                }\r\n            }\r\n        },\r\n\r\n        _onShowEvent: function (e) {\r\n            if (!this.visible) {\r\n                this.show();\r\n            }\r\n        },\r\n\r\n        _onBlur: function () {\r\n            if (!this.inFocus && this.visible) {\r\n                this.hide();\r\n            }\r\n        },\r\n\r\n        _onMouseDownDatepicker: function (e) {\r\n            this.inFocus = true;\r\n        },\r\n\r\n        _onMouseUpDatepicker: function (e) {\r\n            this.inFocus = false;\r\n            e.originalEvent.inFocus = true;\r\n            if (!e.originalEvent.timepickerFocus) this.$el.focus();\r\n        },\r\n\r\n        _onKeyUpGeneral: function (e) {\r\n            var val = this.$el.val();\r\n\r\n            if (!val) {\r\n                this.clear();\r\n            }\r\n        },\r\n\r\n        _onResize: function () {\r\n            if (this.visible) {\r\n                this.setPosition();\r\n            }\r\n        },\r\n\r\n        _onMouseUpBody: function (e) {\r\n            if (e.originalEvent.inFocus) return;\r\n\r\n            if (this.visible && !this.inFocus) {\r\n                this.hide();\r\n            }\r\n        },\r\n\r\n        _onMouseUpEl: function (e) {\r\n            e.originalEvent.inFocus = true;\r\n            setTimeout(this._onKeyUpGeneral.bind(this),4);\r\n        },\r\n\r\n        _onKeyDown: function (e) {\r\n            var code = e.which;\r\n            this._registerKey(code);\r\n\r\n            // Arrows\r\n            if (code >= 37 && code <= 40) {\r\n                e.preventDefault();\r\n                this._focusNextCell(code);\r\n            }\r\n\r\n            // Enter\r\n            if (code == 13) {\r\n                if (this.focused) {\r\n                    if (this._getCell(this.focused).hasClass('-disabled-')) return;\r\n                    if (this.view != this.opts.minView) {\r\n                        this.down()\r\n                    } else {\r\n                        var alreadySelected = this._isSelected(this.focused, this.cellType);\r\n\r\n                        if (!alreadySelected) {\r\n                            if (this.timepicker) {\r\n                                this.focused.setHours(this.timepicker.hours);\r\n                                this.focused.setMinutes(this.timepicker.minutes);\r\n                            }\r\n                            this.selectDate(this.focused);\r\n                            return;\r\n                        }\r\n                        this._handleAlreadySelectedDates(alreadySelected, this.focused)\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Esc\r\n            if (code == 27) {\r\n                this.hide();\r\n            }\r\n        },\r\n\r\n        _onKeyUp: function (e) {\r\n            var code = e.which;\r\n            this._unRegisterKey(code);\r\n        },\r\n\r\n        _onHotKey: function (e, hotKey) {\r\n            this._handleHotKey(hotKey);\r\n        },\r\n\r\n        _onMouseEnterCell: function (e) {\r\n            var $cell = $(e.target).closest('.datepicker--cell'),\r\n                date = this._getDateFromCell($cell);\r\n\r\n            // Prevent from unnecessary rendering and setting new currentDate\r\n            this.silent = true;\r\n\r\n            if (this.focused) {\r\n                this.focused = ''\r\n            }\r\n\r\n            $cell.addClass('-focus-');\r\n\r\n            this.focused = date;\r\n            this.silent = false;\r\n\r\n            if (this.opts.range && this.selectedDates.length == 1) {\r\n                this.minRange = this.selectedDates[0];\r\n                this.maxRange = '';\r\n                if (datepicker.less(this.minRange, this.focused)) {\r\n                    this.maxRange = this.minRange;\r\n                    this.minRange = '';\r\n                }\r\n                this.views[this.currentView]._update();\r\n            }\r\n        },\r\n\r\n        _onMouseLeaveCell: function (e) {\r\n            var $cell = $(e.target).closest('.datepicker--cell');\r\n\r\n            $cell.removeClass('-focus-');\r\n\r\n            this.silent = true;\r\n            this.focused = '';\r\n            this.silent = false;\r\n        },\r\n\r\n        _onTimeChange: function (e, h, m) {\r\n            var date = new Date(),\r\n                selectedDates = this.selectedDates,\r\n                selected = false;\r\n\r\n            if (selectedDates.length) {\r\n                selected = true;\r\n                date = this.lastSelectedDate;\r\n            }\r\n\r\n            date.setHours(h);\r\n            date.setMinutes(m);\r\n\r\n            if (!selected && !this._getCell(date).hasClass('-disabled-')) {\r\n                this.selectDate(date);\r\n            } else {\r\n                this._setInputValue();\r\n                if (this.opts.onSelect) {\r\n                    this._triggerOnChange();\r\n                }\r\n            }\r\n        },\r\n\r\n        _onClickCell: function (e, date) {\r\n            if (this.timepicker) {\r\n                date.setHours(this.timepicker.hours);\r\n                date.setMinutes(this.timepicker.minutes);\r\n            }\r\n            this.selectDate(date);\r\n        },\r\n\r\n        set focused(val) {\r\n            if (!val && this.focused) {\r\n                var $cell = this._getCell(this.focused);\r\n\r\n                if ($cell.length) {\r\n                    $cell.removeClass('-focus-')\r\n                }\r\n            }\r\n            this._focused = val;\r\n            if (this.opts.range && this.selectedDates.length == 1) {\r\n                this.minRange = this.selectedDates[0];\r\n                this.maxRange = '';\r\n                if (datepicker.less(this.minRange, this._focused)) {\r\n                    this.maxRange = this.minRange;\r\n                    this.minRange = '';\r\n                }\r\n            }\r\n            if (this.silent) return;\r\n            this.date = val;\r\n        },\r\n\r\n        get focused() {\r\n            return this._focused;\r\n        },\r\n\r\n        get parsedDate() {\r\n            return datepicker.getParsedDate(this.date);\r\n        },\r\n\r\n        set date (val) {\r\n            if (!(val instanceof Date)) return;\r\n\r\n            this.currentDate = val;\r\n\r\n            if (this.inited && !this.silent) {\r\n                this.views[this.view]._render();\r\n                this.nav._render();\r\n                if (this.visible && this.elIsInput) {\r\n                    this.setPosition();\r\n                }\r\n            }\r\n            return val;\r\n        },\r\n\r\n        get date () {\r\n            return this.currentDate\r\n        },\r\n\r\n        set view (val) {\r\n            this.viewIndex = this.viewIndexes.indexOf(val);\r\n\r\n            if (this.viewIndex < 0) {\r\n                return;\r\n            }\r\n\r\n            this.prevView = this.currentView;\r\n            this.currentView = val;\r\n\r\n            if (this.inited) {\r\n                if (!this.views[val]) {\r\n                    this.views[val] = new  $.fn.datepicker.Body(this, val, this.opts)\r\n                } else {\r\n                    this.views[val]._render();\r\n                }\r\n\r\n                this.views[this.prevView].hide();\r\n                this.views[val].show();\r\n                this.nav._render();\r\n\r\n                if (this.opts.onChangeView) {\r\n                    this.opts.onChangeView(val)\r\n                }\r\n                if (this.elIsInput && this.visible) this.setPosition();\r\n            }\r\n\r\n            return val\r\n        },\r\n\r\n        get view() {\r\n            return this.currentView;\r\n        },\r\n\r\n        get cellType() {\r\n            return this.view.substring(0, this.view.length - 1)\r\n        },\r\n\r\n        get minTime() {\r\n            var min = datepicker.getParsedDate(this.minDate);\r\n            return new Date(min.year, min.month, min.date).getTime()\r\n        },\r\n\r\n        get maxTime() {\r\n            var max = datepicker.getParsedDate(this.maxDate);\r\n            return new Date(max.year, max.month, max.date).getTime()\r\n        },\r\n\r\n        get curDecade() {\r\n            return datepicker.getDecade(this.date)\r\n        }\r\n    };\r\n\r\n    //  Utils\r\n    // -------------------------------------------------\r\n\r\n    datepicker.getDaysCount = function (date) {\r\n        return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\r\n    };\r\n\r\n    datepicker.getParsedDate = function (date) {\r\n        return {\r\n            year: date.getFullYear(),\r\n            month: date.getMonth(),\r\n            fullMonth: (date.getMonth() + 1) < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1, // One based\r\n            date: date.getDate(),\r\n            fullDate: date.getDate() < 10 ? '0' + date.getDate() : date.getDate(),\r\n            day: date.getDay(),\r\n            hours: date.getHours(),\r\n            fullHours:  date.getHours() < 10 ? '0' + date.getHours() :  date.getHours() ,\r\n            minutes: date.getMinutes(),\r\n            fullMinutes:  date.getMinutes() < 10 ? '0' + date.getMinutes() :  date.getMinutes()\r\n        }\r\n    };\r\n\r\n    datepicker.getDecade = function (date) {\r\n        var firstYear = Math.floor(date.getFullYear() / 10) * 10;\r\n\r\n        return [firstYear, firstYear + 9];\r\n    };\r\n\r\n    datepicker.template = function (str, data) {\r\n        return str.replace(/#\\{([\\w]+)\\}/g, function (source, match) {\r\n            if (data[match] || data[match] === 0) {\r\n                return data[match]\r\n            }\r\n        });\r\n    };\r\n\r\n    datepicker.isSame = function (date1, date2, type) {\r\n        if (!date1 || !date2) return false;\r\n        var d1 = datepicker.getParsedDate(date1),\r\n            d2 = datepicker.getParsedDate(date2),\r\n            _type = type ? type : 'day',\r\n\r\n            conditions = {\r\n                day: d1.date == d2.date && d1.month == d2.month && d1.year == d2.year,\r\n                month: d1.month == d2.month && d1.year == d2.year,\r\n                year: d1.year == d2.year\r\n            };\r\n\r\n        return conditions[_type];\r\n    };\r\n\r\n    datepicker.less = function (dateCompareTo, date, type) {\r\n        if (!dateCompareTo || !date) return false;\r\n        return date.getTime() < dateCompareTo.getTime();\r\n    };\r\n\r\n    datepicker.bigger = function (dateCompareTo, date, type) {\r\n        if (!dateCompareTo || !date) return false;\r\n        return date.getTime() > dateCompareTo.getTime();\r\n    };\r\n\r\n    datepicker.getLeadingZeroNum = function (num) {\r\n        return parseInt(num) < 10 ? '0' + num : num;\r\n    };\r\n\r\n    /**\r\n     * Returns copy of date with hours and minutes equals to 0\r\n     * @param date {Date}\r\n     */\r\n    datepicker.resetTime = function (date) {\r\n        if (typeof date != 'object') return;\r\n        date = datepicker.getParsedDate(date);\r\n        return new Date(date.year, date.month, date.date)\r\n    };\r\n\r\n    $.fn.datepicker = function ( options ) {\r\n        return this.each(function () {\r\n            if (!$.data(this, pluginName)) {\r\n                $.data(this,  pluginName,\r\n                    new Datepicker( this, options ));\r\n            } else {\r\n                var _this = $.data(this, pluginName);\r\n\r\n                _this.opts = $.extend(true, _this.opts, options);\r\n                _this.update();\r\n            }\r\n        });\r\n    };\r\n\r\n    $.fn.datepicker.Constructor = Datepicker;\r\n\r\n    $.fn.datepicker.language = {\r\n        ru: {\r\n            days: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\r\n            daysShort: ['Вос','Пон','Вто','Сре','Чет','Пят','Суб'],\r\n            daysMin: ['Вс','Пн','Вт','Ср','Чт','Пт','Сб'],\r\n            months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n            monthsShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\r\n            today: 'Применить',\r\n            clear: 'Очистить',\r\n            dateFormat: 'dd.mm.yyyy',\r\n            timeFormat: 'hh:ii',\r\n            firstDay: 1\r\n        }\r\n    };\r\n\r\n    $(function () {\r\n        $(autoInitSelector).datepicker();\r\n    })\r\n\r\n})();\r\n\r\n;(function () {\r\n    var templates = {\r\n        days:'' +\r\n        '<div class=\"datepicker--days datepicker--body\">' +\r\n        '<div class=\"datepicker--days-names\"></div>' +\r\n        '<div class=\"datepicker--cells datepicker--cells-days\"></div>' +\r\n        '</div>',\r\n        months: '' +\r\n        '<div class=\"datepicker--months datepicker--body\">' +\r\n        '<div class=\"datepicker--cells datepicker--cells-months\"></div>' +\r\n        '</div>',\r\n        years: '' +\r\n        '<div class=\"datepicker--years datepicker--body\">' +\r\n        '<div class=\"datepicker--cells datepicker--cells-years\"></div>' +\r\n        '</div>'\r\n        },\r\n        datepicker = $.fn.datepicker,\r\n        dp = datepicker.Constructor;\r\n\r\n    datepicker.Body = function (d, type, opts) {\r\n        this.d = d;\r\n        this.type = type;\r\n        this.opts = opts;\r\n        this.$el = $('');\r\n\r\n        if (this.opts.onlyTimepicker) return;\r\n        this.init();\r\n    };\r\n\r\n    datepicker.Body.prototype = {\r\n        init: function () {\r\n            this._buildBaseHtml();\r\n            this._render();\r\n\r\n            this._bindEvents();\r\n        },\r\n\r\n        _bindEvents: function () {\r\n            this.$el.on('click', '.datepicker--cell', $.proxy(this._onClickCell, this));\r\n        },\r\n\r\n        _buildBaseHtml: function () {\r\n            this.$el = $(templates[this.type]).appendTo(this.d.$content);\r\n            this.$names = $('.datepicker--days-names', this.$el);\r\n            this.$cells = $('.datepicker--cells', this.$el);\r\n        },\r\n\r\n        _getDayNamesHtml: function (firstDay, curDay, html, i) {\r\n            curDay = curDay != undefined ? curDay : firstDay;\r\n            html = html ? html : '';\r\n            i = i != undefined ? i : 0;\r\n\r\n            if (i > 7) return html;\r\n            if (curDay == 7) return this._getDayNamesHtml(firstDay, 0, html, ++i);\r\n\r\n            html += '<div class=\"datepicker--day-name' + (this.d.isWeekend(curDay) ? \" -weekend-\" : \"\") + '\">' + this.d.loc.daysMin[curDay] + '</div>';\r\n\r\n            return this._getDayNamesHtml(firstDay, ++curDay, html, ++i);\r\n        },\r\n\r\n        _getCellContents: function (date, type) {\r\n            var classes = \"datepicker--cell datepicker--cell-\" + type,\r\n                currentDate = new Date(),\r\n                parent = this.d,\r\n                minRange = dp.resetTime(parent.minRange),\r\n                maxRange = dp.resetTime(parent.maxRange),\r\n                opts = parent.opts,\r\n                d = dp.getParsedDate(date),\r\n                render = {},\r\n                html = d.date;\r\n\r\n            switch (type) {\r\n                case 'day':\r\n                    if (parent.isWeekend(d.day)) classes += \" -weekend-\";\r\n                    if (d.month != this.d.parsedDate.month) {\r\n                        classes += \" -other-month-\";\r\n                        if (!opts.selectOtherMonths) {\r\n                            classes += \" -disabled-\";\r\n                        }\r\n                        if (!opts.showOtherMonths) html = '';\r\n                    }\r\n                    break;\r\n                case 'month':\r\n                    html = parent.loc[parent.opts.monthsField][d.month];\r\n                    break;\r\n                case 'year':\r\n                    var decade = parent.curDecade;\r\n                    html = d.year;\r\n                    if (d.year < decade[0] || d.year > decade[1]) {\r\n                        classes += ' -other-decade-';\r\n                        if (!opts.selectOtherYears) {\r\n                            classes += \" -disabled-\";\r\n                        }\r\n                        if (!opts.showOtherYears) html = '';\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if (opts.onRenderCell) {\r\n                render = opts.onRenderCell(date, type) || {};\r\n                html = render.html ? render.html : html;\r\n                classes += render.classes ? ' ' + render.classes : '';\r\n            }\r\n\r\n            if (opts.range) {\r\n                if (dp.isSame(minRange, date, type)) classes += ' -range-from-';\r\n                if (dp.isSame(maxRange, date, type)) classes += ' -range-to-';\r\n\r\n                if (parent.selectedDates.length == 1 && parent.focused) {\r\n                    if (\r\n                        (dp.bigger(minRange, date) && dp.less(parent.focused, date)) ||\r\n                        (dp.less(maxRange, date) && dp.bigger(parent.focused, date)))\r\n                    {\r\n                        classes += ' -in-range-'\r\n                    }\r\n\r\n                    if (dp.less(maxRange, date) && dp.isSame(parent.focused, date)) {\r\n                        classes += ' -range-from-'\r\n                    }\r\n                    if (dp.bigger(minRange, date) && dp.isSame(parent.focused, date)) {\r\n                        classes += ' -range-to-'\r\n                    }\r\n\r\n                } else if (parent.selectedDates.length == 2) {\r\n                    if (dp.bigger(minRange, date) && dp.less(maxRange, date)) {\r\n                        classes += ' -in-range-'\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            if (dp.isSame(currentDate, date, type)) classes += ' -current-';\r\n            if (parent.focused && dp.isSame(date, parent.focused, type)) classes += ' -focus-';\r\n            if (parent._isSelected(date, type)) classes += ' -selected-';\r\n            if (!parent._isInRange(date, type) || render.disabled) classes += ' -disabled-';\r\n\r\n            return {\r\n                html: html,\r\n                classes: classes\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Calculates days number to render. Generates days html and returns it.\r\n         * @param {object} date - Date object\r\n         * @returns {string}\r\n         * @private\r\n         */\r\n        _getDaysHtml: function (date) {\r\n            var totalMonthDays = dp.getDaysCount(date),\r\n                firstMonthDay = new Date(date.getFullYear(), date.getMonth(), 1).getDay(),\r\n                lastMonthDay = new Date(date.getFullYear(), date.getMonth(), totalMonthDays).getDay(),\r\n                daysFromPevMonth = firstMonthDay - this.d.loc.firstDay,\r\n                daysFromNextMonth = 6 - lastMonthDay + this.d.loc.firstDay;\r\n\r\n            daysFromPevMonth = daysFromPevMonth < 0 ? daysFromPevMonth + 7 : daysFromPevMonth;\r\n            daysFromNextMonth = daysFromNextMonth > 6 ? daysFromNextMonth - 7 : daysFromNextMonth;\r\n\r\n            var startDayIndex = -daysFromPevMonth + 1,\r\n                m, y,\r\n                html = '';\r\n\r\n            for (var i = startDayIndex, max = totalMonthDays + daysFromNextMonth; i <= max; i++) {\r\n                y = date.getFullYear();\r\n                m = date.getMonth();\r\n\r\n                html += this._getDayHtml(new Date(y, m, i))\r\n            }\r\n\r\n            return html;\r\n        },\r\n\r\n        _getDayHtml: function (date) {\r\n           var content = this._getCellContents(date, 'day');\r\n\r\n            return '<div class=\"' + content.classes + '\" ' +\r\n                'data-date=\"' + date.getDate() + '\" ' +\r\n                'data-month=\"' + date.getMonth() + '\" ' +\r\n                'data-year=\"' + date.getFullYear() + '\">' + content.html + '</div>';\r\n        },\r\n\r\n        /**\r\n         * Generates months html\r\n         * @param {object} date - date instance\r\n         * @returns {string}\r\n         * @private\r\n         */\r\n        _getMonthsHtml: function (date) {\r\n            var html = '',\r\n                d = dp.getParsedDate(date),\r\n                i = 0;\r\n\r\n            while(i < 12) {\r\n                html += this._getMonthHtml(new Date(d.year, i));\r\n                i++\r\n            }\r\n\r\n            return html;\r\n        },\r\n\r\n        _getMonthHtml: function (date) {\r\n            var content = this._getCellContents(date, 'month');\r\n\r\n            return '<div class=\"' + content.classes + '\" data-month=\"' + date.getMonth() + '\">' + content.html + '</div>'\r\n        },\r\n\r\n        _getYearsHtml: function (date) {\r\n            var d = dp.getParsedDate(date),\r\n                decade = dp.getDecade(date),\r\n                firstYear = decade[0] - 1,\r\n                html = '',\r\n                i = firstYear;\r\n\r\n            for (i; i <= decade[1] + 1; i++) {\r\n                html += this._getYearHtml(new Date(i , 0));\r\n            }\r\n\r\n            return html;\r\n        },\r\n\r\n        _getYearHtml: function (date) {\r\n            var content = this._getCellContents(date, 'year');\r\n\r\n            return '<div class=\"' + content.classes + '\" data-year=\"' + date.getFullYear() + '\">' + content.html + '</div>'\r\n        },\r\n\r\n        _renderTypes: {\r\n            days: function () {\r\n                var dayNames = this._getDayNamesHtml(this.d.loc.firstDay),\r\n                    days = this._getDaysHtml(this.d.currentDate);\r\n\r\n                this.$cells.html(days);\r\n                this.$names.html(dayNames)\r\n            },\r\n            months: function () {\r\n                var html = this._getMonthsHtml(this.d.currentDate);\r\n\r\n                this.$cells.html(html)\r\n            },\r\n            years: function () {\r\n                var html = this._getYearsHtml(this.d.currentDate);\r\n\r\n                this.$cells.html(html)\r\n            }\r\n        },\r\n\r\n        _render: function () {\r\n            if (this.opts.onlyTimepicker) return;\r\n            this._renderTypes[this.type].bind(this)();\r\n        },\r\n\r\n        _update: function () {\r\n            var $cells = $('.datepicker--cell', this.$cells),\r\n                _this = this,\r\n                classes,\r\n                $cell,\r\n                date;\r\n            $cells.each(function (cell, i) {\r\n                $cell = $(this);\r\n                date = _this.d._getDateFromCell($(this));\r\n                classes = _this._getCellContents(date, _this.d.cellType);\r\n                $cell.attr('class',classes.classes)\r\n            });\r\n        },\r\n\r\n        show: function () {\r\n            if (this.opts.onlyTimepicker) return;\r\n            this.$el.addClass('active');\r\n            this.acitve = true;\r\n        },\r\n\r\n        hide: function () {\r\n            this.$el.removeClass('active');\r\n            this.active = false;\r\n        },\r\n\r\n        //  Events\r\n        // -------------------------------------------------\r\n\r\n        _handleClick: function (el) {\r\n            var date = el.data('date') || 1,\r\n                month = el.data('month') || 0,\r\n                year = el.data('year') || this.d.parsedDate.year,\r\n                dp = this.d;\r\n            // Change view if min view does not reach yet\r\n            if (dp.view != this.opts.minView) {\r\n                dp.down(new Date(year, month, date));\r\n                return;\r\n            }\r\n            // Select date if min view is reached\r\n            var selectedDate = new Date(year, month, date),\r\n                alreadySelected = this.d._isSelected(selectedDate, this.d.cellType);\r\n\r\n            if (!alreadySelected) {\r\n                dp._trigger('clickCell', selectedDate);\r\n                return;\r\n            }\r\n\r\n            dp._handleAlreadySelectedDates.bind(dp, alreadySelected, selectedDate)();\r\n\r\n        },\r\n\r\n        _onClickCell: function (e) {\r\n            var $el = $(e.target).closest('.datepicker--cell');\r\n\r\n            if ($el.hasClass('-disabled-')) return;\r\n\r\n            this._handleClick.bind(this)($el);\r\n        }\r\n    };\r\n})();\r\n\r\n;(function () {\r\n    var template = '' +\r\n        '<div class=\"datepicker--nav-action\" data-action=\"prev\">#{prevHtml}</div>' +\r\n        '<div class=\"datepicker--nav-title\">#{title}</div>' +\r\n        '<div class=\"datepicker--nav-action\" data-action=\"next\">#{nextHtml}</div>',\r\n        buttonsContainerTemplate = '<div class=\"datepicker--buttons\"></div>',\r\n        button = '<span class=\"datepicker--button\" data-action=\"#{action}\">#{label}</span>',\r\n        datepicker = $.fn.datepicker,\r\n        dp = datepicker.Constructor;\r\n\r\n    datepicker.Navigation = function (d, opts) {\r\n        this.d = d;\r\n        this.opts = opts;\r\n\r\n        this.$buttonsContainer = '';\r\n\r\n        this.init();\r\n    };\r\n\r\n    datepicker.Navigation.prototype = {\r\n        init: function () {\r\n            this._buildBaseHtml();\r\n            this._bindEvents();\r\n        },\r\n\r\n        _bindEvents: function () {\r\n            this.d.$nav.on('click', '.datepicker--nav-action', $.proxy(this._onClickNavButton, this));\r\n            this.d.$nav.on('click', '.datepicker--nav-title', $.proxy(this._onClickNavTitle, this));\r\n            this.d.$datepicker.on('click', '.datepicker--button', $.proxy(this._onClickNavButton, this));\r\n        },\r\n\r\n        _buildBaseHtml: function () {\r\n            if (!this.opts.onlyTimepicker) {\r\n                this._render();\r\n            }\r\n            this._addButtonsIfNeed();\r\n        },\r\n\r\n        _addButtonsIfNeed: function () {\r\n            if (this.opts.clearButton) {\r\n                this._addButton('clear')\r\n            }\r\n            if (this.opts.todayButton) {\r\n                this._addButton('today')\r\n            }\r\n        },\r\n\r\n        _render: function () {\r\n            var title = this._getTitle(this.d.currentDate),\r\n                html = dp.template(template, $.extend({title: title}, this.opts));\r\n            this.d.$nav.html(html);\r\n            if (this.d.view == 'years') {\r\n                $('.datepicker--nav-title', this.d.$nav).addClass('-disabled-');\r\n            }\r\n            this.setNavStatus();\r\n        },\r\n\r\n        _getTitle: function (date) {\r\n            return this.d.formatDate(this.opts.navTitles[this.d.view], date)\r\n        },\r\n\r\n        _addButton: function (type) {\r\n            if (!this.$buttonsContainer.length) {\r\n                this._addButtonsContainer();\r\n            }\r\n\r\n            var data = {\r\n                    action: type,\r\n                    label: this.d.loc[type]\r\n                },\r\n                html = dp.template(button, data);\r\n\r\n            if ($('[data-action=' + type + ']', this.$buttonsContainer).length) return;\r\n            this.$buttonsContainer.append(html);\r\n        },\r\n\r\n        _addButtonsContainer: function () {\r\n            this.d.$datepicker.append(buttonsContainerTemplate);\r\n            this.$buttonsContainer = $('.datepicker--buttons', this.d.$datepicker);\r\n        },\r\n\r\n        setNavStatus: function () {\r\n            if (!(this.opts.minDate || this.opts.maxDate) || !this.opts.disableNavWhenOutOfRange) return;\r\n\r\n            var date = this.d.parsedDate,\r\n                m = date.month,\r\n                y = date.year,\r\n                d = date.date;\r\n\r\n            switch (this.d.view) {\r\n                case 'days':\r\n                    if (!this.d._isInRange(new Date(y, m-1, 1), 'month')) {\r\n                        this._disableNav('prev')\r\n                    }\r\n                    if (!this.d._isInRange(new Date(y, m+1, 1), 'month')) {\r\n                        this._disableNav('next')\r\n                    }\r\n                    break;\r\n                case 'months':\r\n                    if (!this.d._isInRange(new Date(y-1, m, d), 'year')) {\r\n                        this._disableNav('prev')\r\n                    }\r\n                    if (!this.d._isInRange(new Date(y+1, m, d), 'year')) {\r\n                        this._disableNav('next')\r\n                    }\r\n                    break;\r\n                case 'years':\r\n                    var decade = dp.getDecade(this.d.date);\r\n                    if (!this.d._isInRange(new Date(decade[0] - 1, 0, 1), 'year')) {\r\n                        this._disableNav('prev')\r\n                    }\r\n                    if (!this.d._isInRange(new Date(decade[1] + 1, 0, 1), 'year')) {\r\n                        this._disableNav('next')\r\n                    }\r\n                    break;\r\n            }\r\n        },\r\n\r\n        _disableNav: function (nav) {\r\n            $('[data-action=\"' + nav + '\"]', this.d.$nav).addClass('-disabled-')\r\n        },\r\n\r\n        _activateNav: function (nav) {\r\n            $('[data-action=\"' + nav + '\"]', this.d.$nav).removeClass('-disabled-')\r\n        },\r\n\r\n        _onClickNavButton: function (e) {\r\n            var $el = $(e.target).closest('[data-action]'),\r\n                action = $el.data('action');\r\n\r\n            this.d[action]();\r\n        },\r\n\r\n        _onClickNavTitle: function (e) {\r\n            if ($(e.target).hasClass('-disabled-')) return;\r\n\r\n            if (this.d.view == 'days') {\r\n                return this.d.view = 'months'\r\n            }\r\n\r\n            this.d.view = 'years';\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n;(function () {\r\n    var template = '<div class=\"datepicker--time\">' +\r\n        '<div class=\"datepicker--time-current\">' +\r\n        '   <span class=\"datepicker--time-current-hours\">#{hourVisible}</span>' +\r\n        '   <span class=\"datepicker--time-current-colon\">:</span>' +\r\n        '   <span class=\"datepicker--time-current-minutes\">#{minValue}</span>' +\r\n        '</div>' +\r\n        '<div class=\"datepicker--time-sliders\">' +\r\n        '   <div class=\"datepicker--time-row\">' +\r\n        '      <input type=\"range\" name=\"hours\" value=\"#{hourValue}\" min=\"#{hourMin}\" max=\"#{hourMax}\" step=\"#{hourStep}\"/>' +\r\n        '   </div>' +\r\n        '   <div class=\"datepicker--time-row\">' +\r\n        '      <input type=\"range\" name=\"minutes\" value=\"#{minValue}\" min=\"#{minMin}\" max=\"#{minMax}\" step=\"#{minStep}\"/>' +\r\n        '   </div>' +\r\n        '</div>' +\r\n        '</div>',\r\n        datepicker = $.fn.datepicker,\r\n        dp = datepicker.Constructor;\r\n\r\n    datepicker.Timepicker = function (inst, opts) {\r\n        this.d = inst;\r\n        this.opts = opts;\r\n\r\n        this.init();\r\n    };\r\n\r\n    datepicker.Timepicker.prototype = {\r\n        init: function () {\r\n            var input = 'input';\r\n            this._setTime(this.d.date);\r\n            this._buildHTML();\r\n\r\n            if (navigator.userAgent.match(/trident/gi)) {\r\n                input = 'change';\r\n            }\r\n\r\n            this.d.$el.on('selectDate', this._onSelectDate.bind(this));\r\n            this.$ranges.on(input, this._onChangeRange.bind(this));\r\n            this.$ranges.on('mouseup', this._onMouseUpRange.bind(this));\r\n            this.$ranges.on('mousemove focus ', this._onMouseEnterRange.bind(this));\r\n            this.$ranges.on('mouseout blur', this._onMouseOutRange.bind(this));\r\n        },\r\n\r\n        _setTime: function (date) {\r\n            var _date = dp.getParsedDate(date);\r\n\r\n            this._handleDate(date);\r\n            this.hours = _date.hours < this.minHours ? this.minHours : _date.hours;\r\n            this.minutes = _date.minutes < this.minMinutes ? this.minMinutes : _date.minutes;\r\n        },\r\n\r\n        /**\r\n         * Sets minHours and minMinutes from date (usually it's a minDate)\r\n         * Also changes minMinutes if current hours are bigger then @date hours\r\n         * @param date {Date}\r\n         * @private\r\n         */\r\n        _setMinTimeFromDate: function (date) {\r\n            this.minHours = date.getHours();\r\n            this.minMinutes = date.getMinutes();\r\n\r\n            // If, for example, min hours are 10, and current hours are 12,\r\n            // update minMinutes to default value, to be able to choose whole range of values\r\n            if (this.d.lastSelectedDate) {\r\n                if (this.d.lastSelectedDate.getHours() > date.getHours()) {\r\n                    this.minMinutes = this.opts.minMinutes;\r\n                }\r\n            }\r\n        },\r\n\r\n        _setMaxTimeFromDate: function (date) {\r\n            this.maxHours = date.getHours();\r\n            this.maxMinutes = date.getMinutes();\r\n\r\n            if (this.d.lastSelectedDate) {\r\n                if (this.d.lastSelectedDate.getHours() < date.getHours()) {\r\n                    this.maxMinutes = this.opts.maxMinutes;\r\n                }\r\n            }\r\n        },\r\n\r\n        _setDefaultMinMaxTime: function () {\r\n            var maxHours = 23,\r\n                maxMinutes = 59,\r\n                opts = this.opts;\r\n\r\n            this.minHours = opts.minHours < 0 || opts.minHours > maxHours ? 0 : opts.minHours;\r\n            this.minMinutes = opts.minMinutes < 0 || opts.minMinutes > maxMinutes ? 0 : opts.minMinutes;\r\n            this.maxHours = opts.maxHours < 0 || opts.maxHours > maxHours ? maxHours : opts.maxHours;\r\n            this.maxMinutes = opts.maxMinutes < 0 || opts.maxMinutes > maxMinutes ? maxMinutes : opts.maxMinutes;\r\n        },\r\n\r\n        /**\r\n         * Looks for min/max hours/minutes and if current values\r\n         * are out of range sets valid values.\r\n         * @private\r\n         */\r\n        _validateHoursMinutes: function (date) {\r\n            if (this.hours < this.minHours) {\r\n                this.hours = this.minHours;\r\n            } else if (this.hours > this.maxHours) {\r\n                this.hours = this.maxHours;\r\n            }\r\n\r\n            if (this.minutes < this.minMinutes) {\r\n                this.minutes = this.minMinutes;\r\n            } else if (this.minutes > this.maxMinutes) {\r\n                this.minutes = this.maxMinutes;\r\n            }\r\n        },\r\n\r\n        _buildHTML: function () {\r\n            var lz = dp.getLeadingZeroNum,\r\n                data = {\r\n                    hourMin: this.minHours,\r\n                    hourMax: lz(this.maxHours),\r\n                    hourStep: this.opts.hoursStep,\r\n                    hourValue: this.hours,\r\n                    hourVisible: lz(this.displayHours),\r\n                    minMin: this.minMinutes,\r\n                    minMax: lz(this.maxMinutes),\r\n                    minStep: this.opts.minutesStep,\r\n                    minValue: lz(this.minutes)\r\n                },\r\n                _template = dp.template(template, data);\r\n\r\n            this.$timepicker = $(_template).appendTo(this.d.$datepicker);\r\n            this.$ranges = $('[type=\"range\"]', this.$timepicker);\r\n            this.$hours = $('[name=\"hours\"]', this.$timepicker);\r\n            this.$minutes = $('[name=\"minutes\"]', this.$timepicker);\r\n            this.$hoursText = $('.datepicker--time-current-hours', this.$timepicker);\r\n            this.$minutesText = $('.datepicker--time-current-minutes', this.$timepicker);\r\n\r\n            if (this.d.ampm) {\r\n                this.$ampm = $('<span class=\"datepicker--time-current-ampm\">')\r\n                    .appendTo($('.datepicker--time-current', this.$timepicker))\r\n                    .html(this.dayPeriod);\r\n\r\n                this.$timepicker.addClass('-am-pm-');\r\n            }\r\n        },\r\n\r\n        _updateCurrentTime: function () {\r\n            var h =  dp.getLeadingZeroNum(this.displayHours),\r\n                m = dp.getLeadingZeroNum(this.minutes);\r\n\r\n            this.$hoursText.html(h);\r\n            this.$minutesText.html(m);\r\n\r\n            if (this.d.ampm) {\r\n                this.$ampm.html(this.dayPeriod);\r\n            }\r\n        },\r\n\r\n        _updateRanges: function () {\r\n            this.$hours.attr({\r\n                min: this.minHours,\r\n                max: this.maxHours\r\n            }).val(this.hours);\r\n\r\n            this.$minutes.attr({\r\n                min: this.minMinutes,\r\n                max: this.maxMinutes\r\n            }).val(this.minutes)\r\n        },\r\n\r\n        /**\r\n         * Sets minHours, minMinutes etc. from date. If date is not passed, than sets\r\n         * values from options\r\n         * @param [date] {object} - Date object, to get values from\r\n         * @private\r\n         */\r\n        _handleDate: function (date) {\r\n            this._setDefaultMinMaxTime();\r\n            if (date) {\r\n                if (dp.isSame(date, this.d.opts.minDate)) {\r\n                    this._setMinTimeFromDate(this.d.opts.minDate);\r\n                } else if (dp.isSame(date, this.d.opts.maxDate)) {\r\n                    this._setMaxTimeFromDate(this.d.opts.maxDate);\r\n                }\r\n            }\r\n\r\n            this._validateHoursMinutes(date);\r\n        },\r\n\r\n        update: function () {\r\n            this._updateRanges();\r\n            this._updateCurrentTime();\r\n        },\r\n\r\n        /**\r\n         * Calculates valid hour value to display in text input and datepicker's body.\r\n         * @param date {Date|Number} - date or hours\r\n         * @param [ampm] {Boolean} - 12 hours mode\r\n         * @returns {{hours: *, dayPeriod: string}}\r\n         * @private\r\n         */\r\n        _getValidHoursFromDate: function (date, ampm) {\r\n            var d = date,\r\n                hours = date;\r\n\r\n            if (date instanceof Date) {\r\n                d = dp.getParsedDate(date);\r\n                hours = d.hours;\r\n            }\r\n\r\n            var _ampm = ampm || this.d.ampm,\r\n                dayPeriod = 'am';\r\n\r\n            if (_ampm) {\r\n                switch(true) {\r\n                    case hours == 0:\r\n                        hours = 12;\r\n                        break;\r\n                    case hours == 12:\r\n                        dayPeriod = 'pm';\r\n                        break;\r\n                    case hours > 11:\r\n                        hours = hours - 12;\r\n                        dayPeriod = 'pm';\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n\r\n            return {\r\n                hours: hours,\r\n                dayPeriod: dayPeriod\r\n            }\r\n        },\r\n\r\n        set hours (val) {\r\n            this._hours = val;\r\n\r\n            var displayHours = this._getValidHoursFromDate(val);\r\n\r\n            this.displayHours = displayHours.hours;\r\n            this.dayPeriod = displayHours.dayPeriod;\r\n        },\r\n\r\n        get hours() {\r\n            return this._hours;\r\n        },\r\n\r\n        //  Events\r\n        // -------------------------------------------------\r\n\r\n        _onChangeRange: function (e) {\r\n            var $target = $(e.target),\r\n                name = $target.attr('name');\r\n\r\n            this.d.timepickerIsActive = true;\r\n\r\n            this[name] = $target.val();\r\n            this._updateCurrentTime();\r\n            this.d._trigger('timeChange', [this.hours, this.minutes]);\r\n\r\n            this._handleDate(this.d.lastSelectedDate);\r\n            this.update()\r\n        },\r\n\r\n        _onSelectDate: function (e, data) {\r\n            this._handleDate(data);\r\n            this.update();\r\n        },\r\n\r\n        _onMouseEnterRange: function (e) {\r\n            var name = $(e.target).attr('name');\r\n            $('.datepicker--time-current-' + name, this.$timepicker).addClass('-focus-');\r\n        },\r\n\r\n        _onMouseOutRange: function (e) {\r\n            var name = $(e.target).attr('name');\r\n            if (this.d.inFocus) return; // Prevent removing focus when mouse out of range slider\r\n            $('.datepicker--time-current-' + name, this.$timepicker).removeClass('-focus-');\r\n        },\r\n\r\n        _onMouseUpRange: function (e) {\r\n            this.d.timepickerIsActive = false;\r\n        }\r\n    };\r\n})();\r\n })(window, jQuery);\r\n"]}